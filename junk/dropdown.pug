doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    title dropdown
    link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css')
    style.
      #login-dropdown {
      position: relative;
      cursor: pointer;
      }
      .dropdown-menu {
      position: absolute;
      top: 100%;
      left: 0;
      display: none;
      padding: 10px;
      background-color: #fff;
      box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
      }
      .dropdown-menu li {
      list-style-type: none;
      padding: 10px;
      text-align: center;
      }
      .dropdown-menu li a {
      text-decoration: none;
      color: #000;
      }
      #login-dropdown.show .dropdown-menu {
      display: block;
      }
  body
    nav.navbar
      ul
        li
          a(href='/') Home
        li
          a(href='/products') Products
        li
          a(href='/contact') Contact
        li#login-dropdown
          i.fas.fa-user
    script(src='./script/user/navbar.js')
    
    //- script.
      // Get the login dropdown element
      const loginDropdown = document.getElementById('login-dropdown');
      // Create a dropdown menu element
      const dropdownMenu = document.createElement('ul');
      dropdownMenu.classList.add('dropdown-menu');
      // Create a profile link element
      const profileLink = document.createElement('li');
      const profileLinkAnchor = document.createElement('a');
      profileLinkAnchor.href = '/profile';
      profileLinkAnchor.textContent = 'Profile';
      profileLink.appendChild(profileLinkAnchor);
      // Create an orders link element
      const ordersLink = document.createElement('li');
      const ordersLinkAnchor = document.createElement('a');
      ordersLinkAnchor.href = '/orders';
      ordersLinkAnchor.textContent = 'Orders';
      ordersLink.appendChild(ordersLinkAnchor);
      // Create a logout link element
      const logoutLink = document.createElement('li');
      const logoutLinkAnchor = document.createElement('a');
      logoutLinkAnchor.href = '/logout';
      logoutLinkAnchor.textContent = 'Logout';
      logoutLink.appendChild(logoutLinkAnchor);
      // Add the profile, orders, and logout links to the dropdown menu
      dropdownMenu.appendChild(profileLink);
      dropdownMenu.appendChild(ordersLink);
      dropdownMenu.appendChild(logoutLink);
      // Add the dropdown menu to the login dropdown element
      loginDropdown.appendChild(dropdownMenu);
      // Add an event listener for the click event on the login dropdown
      loginDropdown.addEventListener('click', () => {
      // Toggle the visibility of the dropdown menu
      loginDropdown.classList.toggle('show');
      });
      // Check if the user is logged in
      const isLoggedIn = () => {
      // Get the JWT token from local storage
      const token = localStorage.getItem('jwt');
      // If the token exists, the user is logged in
      return token !== null;
      };
      // Show or hide the login dropdown based on the user's login status
      const toggleLoginDropdown = () => {
      if (isLoggedIn()) {
      loginDropdown.style.display = 'block';
      } else {
      loginDropdown.style.display = 'none';
      }
      };
      // Add an event listener for the page load event
      window.addEventListener('load', toggleLoginDropdown);
