include ../partials/sidemenu
#content-wrapper
  link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css", integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN", crossorigin="anonymous")
  link(rel="stylesheet", href="../../stylesheet/user/sortTable.css")
  script(src="https://code.jquery.com/jquery-3.5.1.slim.min.js", integrity="sha384-DfXdz2htPH00kS58PrEW3hmvZFEMg9Supu4T9jwmg/UplcUJOua9e+06TIzrkOnQ", crossorigin="anonymous")
  script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js", integrity="sha384-Piv4xVNRyMGpqkS2by6br4gNJ7DXjqk09RmUpJ8jgGtD7zP9yug3goQfGII0yAns", crossorigin="anonymous")
  //- script(defer src="../../script/admin/panel.js") 
  script(defer src="../../script/user/sortTable.js") 
  .container-fluid#containerFluid
    .container-fluid#containerFluid
      section.dashboard-overview
        h2 Overview
        .metric-grid
          .metric-card
            i.fas.fa-list-alt(aria-hidden="true")
            .metric-data
              h2#totalCategoriesCount
              h3  totalCategories 
              p Orders Delivered                
          .metric-card
            i.fas.fa-shopping-cart(aria-hidden="true")
            .metric-data
              h3= orders.length
              p Total Orders
          .metric-card
            i.fas.fa-users(aria-hidden="true")
            .metric-data
              h3  newUsers 
              p New Users This Month
    h1.text-center.text-light.my-5 #{name}
    if orders.length > 0
      table#my-table.table-sortable
        thead#contentThead
          tr#contentTheadTr
            th Order ID
            th User
            th Total Amount
            th Order Date
            th Delivery Date
            th Status
            th Actions
        tbody#contentTbody
          each order in orders
            tr#contentTbodyTr
              td #{order._id}
              td #{order.user.name}
              td #{order.totalAmount}
              td= formatDate(order.created_at)
              td= formatDate(order.deliveryDate)
              td
                if order.status === 'pending'
                  span.status.pending Pending
                else if order.status === 'processing'
                  span.status.processing Processing
                else if order.status === 'Failed'
                  span.status.failed Failed
                else if order.status === 'shipped'
                  span.status.shipped Shipped
                else if order.status === 'delivered' && order.returnRequest.status==null 
                  span.status.delivered Delivered
                else if order.status === 'delivered' && order.returnRequest.status=='pending' 
                  span.status.returned Return requested
                else if order.returnRequest.status== 'accepted'
                  span.status.return-approved Return approved
                else if order.status === 'cancelled'
                  span.status.cancelled Cancelled
              td
                if order.status === 'cancelled'  || order.status === 'Failed'
                  .editD.text-center.border.border-info
                    a(href=`/admin/orders/${order._id}`) view
                else
                  .editD.border.border-info
                    a(href=`/admin/orders/${order._id}`) update
                //a(href='/orders/#{order._id}/delete') Delete

      .pagination
        if currentPage > 1
          a.pagination-link(href=`/admin/orders?page=${currentPage - 1}`) Previous
        span Page #{currentPage} of #{totalPages}
        if currentPage < totalPages
          a.pagination-link(href=`/admin/orders?page=${currentPage + 1}`) Next
    else
      .d-grid
        .empty.text-center(style='color:gold;') You haven't recived any orders yet
    script.
      document.addEventListener('DOMContentLoaded', function() {
        const transactionTable = document.querySelector('#my-table');
        
        function attachPaginationListeners() {
          const paginationLinks = document.querySelectorAll('.pagination-link');
          paginationLinks.forEach(link => {
            link.addEventListener('click', handlePaginationClick);
          });
        }

        function handlePaginationClick(e) {
          e.preventDefault();
          const url = this.getAttribute('href');
          
          fetch(url)
            .then(response => response.text())
            .then(html => {
              const parser = new DOMParser();
              const doc = parser.parseFromString(html, 'text/html');
              const newTransactions = doc.querySelector('#my-table');
              const newPagination = doc.querySelector('.pagination');
              
              if (newTransactions) {
                transactionTable.innerHTML = newTransactions.innerHTML;
              } else {
                transactionTable.innerHTML = '<tr><td colspan="4">No transactions on this page.</td></tr>';
              }
              
              // Check if pagination container exists before updating
              const paginationContainer = document.querySelector('.pagination');
              if (paginationContainer && newPagination) {
                paginationContainer.outerHTML = newPagination.outerHTML;
              } else if (newPagination) {
                // If pagination container doesn't exist, but new pagination does, append it
                transactionTable.parentNode.insertAdjacentHTML('beforeend', newPagination.outerHTML);
              }
              
              // Update the URL without reloading the page
              history.pushState(null, '', url);
              
              // Reattach event listeners to new pagination links
              attachPaginationListeners();
            });
        }
        attachPaginationListeners();
      });
    style.
      body {
          font-family: Arial, sans-serif;
      }
      
      h1 {
          font-size: 24px;
          margin-bottom: 20px;
      }
      
      table {
          width: 100%;
          border-collapse: collapse;
      }
      
      th,
      td {
          border: 1px solid #ccc;
          padding: 5px;
          text-align: center;
      }
      
      th {
          //- background-color: #f2f2f2;
      }
      
      .status {
          padding: 5px 10px;
          border-radius: 3px;
      }
      
      .status.pending {
          background-color: #ffc0cb;
          color: #d9534f;
      }
      
      .status.processing {
          background-color: #ffecb3;
          color: #f0ad4e;
      }
      
      .status.shipped {
          background-color: #b2dfdb;
          color: #4caf50;
      }
      
      .status.delivered {
          background-color: #c8e6c9;
          color: #2e7d32;
      }
      
      .status.cancelled {
          background-color: #f44336;
          color: #ffffff;
      }

      .status.returned {
      background-color: #d1c4e9; 
      color: #673ab7; 
      }

      .status.return-approved {
      background-color: #ffcc80; 
      color: #e65100; 
      }

      .status.failed {
          background-color: #f8d7da;
          color: #721c24;
      }
      a {
          text-decoration: none;
          color: #3f51b5;
      }
      
      a:hover {
          color: #2d387a;
      }
        .editD.text-center.border.border-info {
            background-color: #f8d7da; 
            border-color: #f5c6cb; 
            color: #721c24; 
            padding: 8px 12px; 
            border-radius: 4px; 
            text-decoration: none; 
            display: inline-block; 
            text-align: center; 
            }

        .editD.text-center.border.border-info:hover {
            background-color: #f1b0b7; 
            border-color: #ee9c9f; 
            color: #491217; 
            text-decoration: none; 
            }

        .editD.border.border-info {
            background-color: #d1ecf1; 
            border-color: #17a2b8; 
            color: #0c5460; 
            padding: 8px 12px; 
            border-radius: 4px; 
            text-decoration: none; 
            display: inline-block; 
            }

        .editD.border.border-info:hover {
            background-color: #bee5eb; 
            border-color: #138496; 
            color: #0b3c4b; 
            text-decoration: none; 
            }

        .pagination {
          margin-top: 20px;
          text-align: center;
          color:white;
        }

        .pagination a {
          display: inline-block;
          padding: 8px 16px;
          text-decoration: none;
          color: #000;
          background-color: #f1f1f1;
          border-radius: 5px;
          margin: 0 5px;
        }

        .pagination a:hover {
          background-color: #ddd;
        }

        .pagination span {
          display: inline-block;
          padding: 8px 16px;
        }

       .pagination {
        background-color: #0a1e1615;

      	padding: 1rem;
      	margin-bottom: 1rem;
      	text-align: center;
      	display: flex;
      	justify-content: center;
      }

      #numbers {
      	padding: 0;
      	margin: 0 2rem;
      	list-style-type: none;
      	display: flex;
      }

      #numbers li a {
      	color: #fff;
      	padding: .5rem 1rem;
      	text-decoration: none;
      	opacity: .7;
      }

      #numbers li a:hover {
      	opacity: 1;
      }

      #numbers li a.active {
      	opacity: 1;
      	background: #fff;
      	color: #333;
      }
      * {
        user-select: none;
        -webkit-tap-highlight-color: transparent;
      }
      .row {
        //- display: table-row;
      }

      .toggle-button-cover {
       
        //- display: table-cell;
        position: relative;
        width: 120px;
        /* height: 140px; */
        box-sizing: border-box;
      }

      .button-cover {
        //- height: 28px;
        //- margin: 20px;
        //- background-color: transparent;
        //- box-shadow: 0 10px 20px -8px #c5d6d6;
        border-radius: 4px;
      }

      .button-cover{
        counter-increment: button-counter;
        content: counter(button-counter);
        position: absolute;
        right: 0;
        bottom: 0;
        color: #d7e3e3;
        font-size: 12px;
        line-height: 1;
        padding: 5px;
      }

      .button-cover,
      .knobs,
      .layer {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
      }

      .button {
        position: relative;
        top: 50%;
        width: 74px;
        height: 36px;
        margin: -22px auto 0 auto;
        overflow: hidden;
      }

      .button.r,
      .button.r .layer {
        border-radius: 100px;
      }

      .button.b2 {
        border-radius: 2px;
      }

      .checkbox {
        position: relative;
        width: 100%;
        height: 100%;
        padding: 0;
        margin: 0;
        opacity: 0;
        cursor: pointer;
        z-index: 3;
      }

      .knobs {
        z-index: 2;

      }

      .layer {
        width: 100%;
        background: rgba(235, 252, 244, 0.2);
        transition: 0.3s ease all;
        z-index: 1;
      }

      /* Button 2 */
      #button-2 .knobs:before,
      #button-2 .knobs:after {
        content: "YES";
        position: absolute;
        top: 4px;
        left: 9px;
        width: 25px;
        height: 25px;
        color: #fff;
        font-size: 8px;
        font-weight: bold;
        text-align: center;
        line-height: 1;
        padding: 9px 4px;
        background-color: #4caf50;
        border-radius: 50%;
        transition: 0.3s ease all;
      }

      #button-2 .knobs:before {
        content: "YES";
      }

      #button-2 .knobs:after {
        content: "NO";
      }

      #button-2 .knobs:after {
        right: -28px;
        left: auto;
        background-color: #f44336;
      }

      #button-2 .checkbox:checked + .knobs:before {
        left: -28px;
      }

      #button-2 .checkbox:checked + .knobs:after {
        right: 4px;
      }

      #button-2 .checkbox:checked ~ .layer {
        background-color: #ffb9b959;
      }
      td{
        margin-top:20%;
      }

      #contentTbody th, #contentTbody td {
      padding: 10px;
      text-align: left; /* Default to left-align text */
      border: 1px solid #ddd; 
      }

      #contentTbody th {
      background-color: #f0f0f0; /* Light gray background for header */
      font-weight: bold;
      }

      #ContentTbody tr:nth-child(even) {
      background-color: #f9f9f9; /* Alternate row colors */
      }

      .metric-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Responsive grid */
        gap: 20px; 
      }

      .metric-card {
        background-color: white; 
        background-color:#d1e7dd67 ; 
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); 
        text-align: center;
      }

      .metric-card i {
        font-size: 3rem;
        color: var(--complementary-color);
        margin-bottom: 10px;
      }

      .metric-data h3 {
        font-size: 2rem;
        margin-bottom: 0.5rem;
      }
