include ../partials/sidemenu
include ../partials/mixins
+resources("offerList")
#content-wrapper
  .container-fluid#containerFluid
    .container-fluid#containerFluid
      section.dashboard-overview
        h2 Overview
        .metric-grid
          .metric-card
            i.fas.fa-tags(aria-hidden="true") 
            .metric-data
              h2#totalOffersCount
              h3  #{items.length} 
              p    Total Offers
               
          .metric-card
            i.fas.fa-check-circle(aria-hidden="true")
            .metric-data
              h2#activeOffersCount
              h3  #{activeOffers} 
              p  Active Offers

    h1.text-center.text-light.my-5 #{name}
    a#createOffer.btn.btn-primary.mb-3(href="/admin/offers/create") Create Offer
    table#my-table
      thead#contentThead
        tr#contentTheadTr
          th Title
          th Description
          th Discount
          th Start Date
          th End Date
          th Status
          th list/unlist
          th Action 
      tbody#contentTbody
        if items
          each offer in items
            tr#contentTbodyTr
              td= offer.name
              td= offer.description
              td= offer.discountPercentage + '%'
              td= offer.startDate.toLocaleDateString()
              td= offer.endDate.toLocaleDateString()
              td.status= offer.status ? 'Active' : 'Inactive'
              td
                .toggle-button-cover
                  .button-cover
                    #button-2.button.r
                      input#checkbox.checkbox(type="checkbox" data-status=offer.status data-id=offer._id)
                      .knobs
                      .layer
              td#ed
                a.btn.btn-sm.text-warning(href=`/admin/offers/${offer._id}/edit` style="width:5rem;") Edit
                | &nbsp;
                input#offerId(type='hidden' value=`${offer._id}`)

  script.
    function errorToast(error) {
      Toastify({
        text: `${error}`,
        duration: 3000,
        gravity: 'bottom',
        backgroundColor: '#ff3333',
      }).showToast();
    }

    function successToast(message) {
      Toastify({
        text: `${message}`,
        duration: 3000,
        gravity: 'bottom',
        backgroundColor: '#33cc33',
      }).showToast();
    }

    var navSearchInput = document.getElementById("adminSearch");
    navSearchInput.addEventListener("input", function() {
      let searchValue = navSearchInput.value;
      getSearchCategory(searchValue);
    });
    
    const items = document.querySelectorAll('input[data-id]');
    items.forEach(item => {
      item.addEventListener('change', (e) => {
        let id = e.target.dataset.id;
        offerStatus(id);
      });
    });
    
    async function offerStatus(id) {
      try {
        const response = await axios.patch(`/admin/offers/${id}/edit?change=true`, {});
        if (response.data.success) {
          await window.toast.success('offer status changed')
          window.location.reload(false);
        }
      } catch (error) {
        console.error("Error:", error);
        errorToast(error);
      }
    }

    const switchInputs = document.querySelectorAll('.checkbox');
    const statuses = document.querySelectorAll('.status');
    switchInputs.forEach((switchInput, index) => {
      statuses[index].innerText === 'Inactive' ? statuses[index].style.color = "#912727" : statuses[index].style.color = "green";
      switchInput.checked = (statuses[index].innerText === 'Inactive') ? true : false;
    });
