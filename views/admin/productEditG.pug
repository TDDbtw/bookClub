html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    title Edit Product
    link(rel="stylesheet", href="../../../stylesheet/admin/createProduct.css")
    link(href="https://cdn.jsdelivr.net/npm/toastify-js@1.12.0/src/toastify.min.css" rel="stylesheet")
    script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")
    script(src="https://code.jquery.com/jquery-3.6.0.min.js")
    script(src="https://cdn.jsdelivr.net/npm/toastify-js@1.12.0/src/toastify.min.js")
  body
    .container
      .main-content#mainContent
        .left-section
          .general-info
            h2 Edit Product
            label
              | Product Name
              input(type='text' id='name' name='name' value=`${product.name}` placeholder=`${product.name}`)
              span#nameError
            label
              | Author Name
              input(type='text' id='author' name='author' value=`${product.author}` placeholder=`${product.author}`)
              span#authorError
            label
              | Description
              textarea(id='description' name='description' placeholder=`${product.description}`)= product.description
              span#descriptionError
          .media
            h2 Media
            label(for='upload')
              .image-placeholder
                .image-preview
                  each image in product.image
                    .imgC(id=`image-${image}` style="height=10px;")
                      .removeImg.remove-btn(data-name=image) remove
                      img(src=`${image.substring(2)}`)
                input(type='file' id='file-input' name='image' multiple)
            #image-container(style='width:50px; display:flex;')
            span#imageError
          .pricing
            h2 Pricing
            label
              | Base Price
              input(type='text' id='price' name='price' style='padding-right:5px;' value=`${product.price}` placeholder=`${product.price}`)
              span#priceError
          .inventory
            h2 Inventory
            label
              | Quantity
              input(type='text' id='stockCount' name='stockCount' style='padding-right:5px;' value=`${product.stockCount}` placeholder=`${product.stockCount}`)
              span#stockCountError

        .right-section
          .category
            h2 Category
            label
              | Product Category
              select#catSelect
                option(value=`${product.category._id}` disabled selected)= product.category.name
                each category in categories
                  option(value=category._id)= category.name
              #categoryError
          .status
            h2  Subcategory 
            label(for=`subcategory`)
              | 
              select.subcatSelect.category(id=`category`, name="subcategories" value=product.subcategories[0].name )
                option(selected="selected" textContent=product.subcategories[0].name value=product.subcategories[0]._id)= product.subcategories[0].name 
              #subCategoryError
          .buttons
            p(style="color:red;") 
            button.cancel Cancel
            button#save-product() Save Product
            input#ss(type='hidden' value=subcategories)
            input#productVal(type="hidden" value=product)


    script(defer src='../../../../script/admin/editProductG.js')
    script.
      let id =document.getElementById('productVal').value
      id =JSON.parse(id)._id
      document.getElementById('file-input').addEventListener('change', function() {
        const imageContainer = document.getElementById('image-container');
        imageContainer.innerHTML = ''; // Clear previous images
        if (this.files) {
          for (let file of this.files) {
            const reader = new FileReader();
            reader.onload = function(e) {
              const img = document.createElement('img');
              img.src = e.target.result;
              img.className = 'uploaded-image';
              img.style.width = '92px'
              imageContainer.appendChild(img);
            };
            reader.readAsDataURL(file);
          }
        }
      });



      $(document).ready(function() {
        $('.remove-btn').click(function() {
          const imageName = $(this).data('name');
          $.ajax({
            url: `/admin/products/${id}/remove-image`,
            type: 'POST',
            data: { name: imageName },
            success: function(response) {
              if (response.success) {
             Toastify({
            text: "Image removed",
            duration: 3000,
            gravity: "bottom", // `top` or `bottom`
            position: "right",
            }).showToast();
              $(`#image-${imageName}`).remove();
              } else {
                alert('Failed to remove image.');
              }
            },
            error: function() {
              alert('Error removing image.');
            }
          });
        });
      });
