include ../partials/navbar
link(rel='stylesheet' href='../../stylesheet/user/addAddress.css')
link(rel='stylesheet' href='../../stylesheet/navbar.css')
link(rel='stylesheet' href='../../stylesheet/user/sortTable.css')
style.
  body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      color:#fbfbfb;
  }

  header {
      background-color: #333;
      color: #fff;
      text-align: center;
      padding: 10px 0;
  }

  .order-table {
      width: 100%;
      border-collapse: collapse;
      margin: 20px 0;
  }

  .order-table th,
  .order-table td {
      border: 1px solid #ccc;
      padding: 10px;
      text-align: left;
  }

  .order-table th {
      background-color: #f2f2f2;
      background-color: #10382a;
  }

  .order-details-btn {
      background-color: #68899a;
      color: white;
      padding: 5px 10px;
      border-radius: 5px;
      cursor: pointer;
      text-decoration: none;
  }

  .order-details-btn:hover {
      background-color: #4d6c7b;
      text-decoration: none;
  }

  .order-empty {
      display: flex;
      justify-content: center;
      flex-direction: column;
      align-items: center;
      font-size: 19px;
  }

  .shop-button {
      height: 4rem;
      font-size: 19px;
  }

  .no-order {
      font-size: 23px;
  }


.container-fluid#mainAdd
  .my-account
    .col-sm-3.my-account-menu
      ul
        li
          a(href='/user/profile') My Account
        li
          a(href='/user/profile') My wishlist
        li
          a(href='/user/profile/edit') Account Information
        li
          a(href='/user/address/new') Address Book
        li
          a(href='/user/order') My Orders
        li
          a(href='/user/wallet') My Wallet 
  .column.main.snipcss-KcpgZ
    .page-title-wrapper
      h1.page-title
        span.base(data-ui-id='page-title-wrapper')
          | My Orders
    if orders.length > 0
      table.order-table.table-sortable
        thead
          tr
            th Order ID
            th Order Placed on 
            th Product(s)
            th Price
            th Payment Method
            th Status
            th Actions
        tbody
          each order in orders
            tr
              td Order #{order._id}
              -let date=moment(order.created_at).format('MM/DD/YYYY')
              td#createdDate(data-orderdate= order.created_at) #{date}
              td
                if order.items.length < 2
                  each product in order.items
                    | #{product.name}
                else
                  |#{order.items[0].name},
                  |#{order.items[1].name} 
                  -let len = order.items.length - 2
                  | and #{len} more..

              td $#{order.totalAmount}
              td $#{order.payment_method}
              if order.returnRequest.status==null
                td  #{order.status}
              else
                td return #{order.returnRequest.status}  
              td 
                a.order-details-btn.text-white(href=`/user/order/${order._id}`) View Details
      .pagination
        if page > 1
          a(href=`/user/orders?page=${page - 1}&limit=${limit}`) Previous
        each p in [...Array(totalPages).keys()]
          a(href=`/user/orders?page=${p + 1}&limit=${limit}`) #{p + 1}
        if page < totalPages
          a(href=`/user/orders?page=${page + 1}&limit=${limit}`) Next
    else
      .order-empty
        p.no-order.text-warning You haven't ordered any items yet!
        a.shop-button.btn.btn-outline-info(href="/products") Shop Now
  script(src="../../script/user/validateAddress.js") 
  script(src="../../script/user/sortTable.js") 
  script.
    $(document).ready(function() {
        // Get the current URL
        var currentUrl = window.location.pathname;

        // Loop through each anchor tag and compare the href attribute with the current URL
        $('.my-account-menu li a').each(function() {
          var href = $(this).attr('href');

          // Check if the current URL matches the href attribute
          if (currentUrl === href) {
            // Apply the background color to the parent li
            $(this).parent('li').css('background', 'linear-gradient(to right, #b71540, #e55039)');
          }
        });
      });

      const  createdDateElement = document.querySelectorAll(".createdDate")
      const element= createdDateElement
      const createdDate=createdDateElement.dataset.orderdate
      console.log(createdDate)

      const date = new Date(createdDate);

        // Extract date components
        let year = date.getFullYear();
        let month = (date.getMonth() + 1).toString().padStart(2, '0'); // Months are 0-based, so we add 1
        let day = date.getDate().toString().padStart(2, '0');
        let hours = date.getHours().toString().padStart(2, '0');
        let minutes = date.getMinutes().toString().padStart(2, '0');
        let seconds = date.getSeconds().toString().padStart(2, '0');
        let milliseconds = date.getMilliseconds().toString().padStart(3, '0');

        // Construct the formatted date and time
        const formattedDateTime = `${year}-${month}-${day}`;

        element.innerHTML= `${formattedDateTime}`
        element.style.color="#E4DEE4 !important;"
