//- inude ../partials/navbarId
include ../partials/navbar
link(rel="stylesheet", href="../stylesheet/product.css")
//- link(rel="stylesheet", href="../stylesheet/home.css")
link(rel='stylesheet', href='../stylesheet/user/sort.css')
.container.d-flex
  #sidebar
    #heading Categories
    ul#categoryList
      each category in categories
        li.catLi
          .catName= category.name
          ul
            each subcategory in subcategories
              if subcategory.category._id == category.id
                  li#subLi
                    input.me-4(type='checkbox' data-sub-cat=subcategory.id)
                    |#{subcategory.name}
                    
  .filter-icon.text-decoration-none
    label.text-white.me-3#clearBtn() clear all
    label.text-white.me-3#clearSearch(style='display:none') search
    span.btn.text-white.me-3#clearSort(style='display:none') sort
    label.text-white.me-3#clearFilter(style='display:none') Filter
    label#sort-by-label(for='sortBy') Sort By:
    select#sortBy
      option(value='lowToHigh') Price: Low to High
      option(value='highToLow') Price: High to Low
      option(value='aToZ') A - Z
      option(value='zToA') Z - A
    svg#sort-button.icon.icon-tabler.icon-tabler-search( xmlns='http://www.w3.org/2000/svg', width='25', height='25', viewBox='0 0 24 24', stroke-width='1.5', stroke='#ffffff', fill='none', stroke-linecap='round', stroke-linejoin='round')
      path(stroke='none' d='M0 0h24v24H0z' fill='none')
      path(d='M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0')
      path(d='M21 21l-6 -6') 
  .two
    if user
      input#userDetails(type="hidden", name="userDetails" value=`${user._id}`)
    section#cardSection.row(style="width:100%;  margin-left:10%;")
      if !user
        each product in products
          include ../partials/card 

    nav 
      ul#pagination.pagination
  script(src='../script/admin/getProductsOneTwo.js')
  script(src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js")
  script(src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js")
  script( type='text/javascript', src='https://cdn.jsdelivr.net/npm/toastify-js')
  script( src='https://unpkg.com/htmx.org@1.9.10' integrity='sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC' crossorigin='anonymous')
  script.
      const addToWishlistButtons = document.querySelectorAll('add-to-wishlist-btn');
      console.log(`wishlist buttons -- ${addToWishlistButtons.length}`)
      addToWishlistButtons.forEach(button => {
      console.log(`button ${button} clicked`)
        button.addEventListener('click', handleAddToWishlist);
      });

       function handleAddToWishlist(event) {
      console.log(`wishlist clicked`)
        const productId = event.target.dataset.productId;

        try {
          const response =  axios.post(`user/wishlist/add/${productId}`); // Adjust route if needed
          if (response.status === 200) {
             
          Toastify({
          text: "Item added to wishlist",
          duration: 3000
          }).showToast();
          } else {
            console.error('Failed to add item to cart:', response.status);
            alert('Failed to add item to cart.');
          }
        } catch (error) {
          console.error('Error adding item to cart:', error);
          alert('An error occurred while adding the item to the cart.');
        }
      }

      const pdpItems = document.querySelectorAll('.productCard');

      pdpItems.forEach(button => {
        button.addEventListener('click', PDP);
      });
      async  function PDP(event) {
        const productId = event.target.dataset.productId;
        window.location.href = `/products/${productId}`;
        }
