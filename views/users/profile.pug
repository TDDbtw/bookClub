include ../partials/navbar
link(rel='stylesheet' href='../stylesheet/user/profile.css')
link(rel='stylesheet' href='../stylesheet/cropper.css')

.my-account
  .col-sm-3.my-account-menu
    ul
      li
        a(href='/user/profile') My Account
      li
        a(href='/user/wishlist') My Wishlist
      li
        a(href='/user/profile/edit') Account Information
      li
        a(href='/user/address/new') Address Book
      li
        a(href='/user/order') My Orders
      li
        a(href='/user/wallet') My Wallet 
  .container-fluid#accContainer
    .account-information
      .account-information-header
        .page-title-wrapper
          h1.page-title
            span.base(data-ui-id='page-title-wrapper')
              | My Account
          img#avatar(src=`${user.avatar}`, alt='Avatar', )
      main.page
      .account-information-body
        .account-information-section
          .account-information-section-title Contact Information
          .account-information-section-content
            p
              strong Name:
              |  #{user.name}   
            p
              strong Email:
              |  #{user.email}
            .account-information-links.text-decoration-none
              a.mb-4.account-information-link(href='/user/profile/edit') Edit
              span.ms-3 |
              a.ms-3.account-information-link(href='/user/profile/edit') Change Password
        .account-information-section
          .account-information-section-title Default Billing Address
          if user.billing_address
            -address=user.billing_address
            p.mt-4 Address: #{address.address} | City: #{address.city} | State: #{address.state} | Zip Code: #{address.zip_code} | Country: #{address.country} 
          else
            .account-information-section-content
              p
                | You have not set a default billing address yet.
            a#editAddressBtn.btn(href='#') Edit Address
        .account-information-section
          .account-information-section-title Default Shipping Address
          if user.shipping_address
            -address=user.shipping_address
            p.mt-4 Address: #{address.address} | City: #{address.city} | State: #{address.state} | Zip Code: #{address.zip_code} | Country: #{address.country} 
          else
            .account-information-section-content
              p
                | You have not set a default shipping address yet.
            //a#editAddressBtn.btn.color2(href='#') Edit Address
  script(src="../../script/cropper.js") 
  script.
    $(document).ready(function() {
      // Get the current URL
      var currentUrl = window.location.pathname;

      // Loop through each anchor tag and compare the href attribute with the current URL
      $('.my-account-menu li a').each(function() {
        var href = $(this).attr('href');

        // Check if the current URL matches the href attribute
        if (currentUrl === href) {
          // Apply the background color to the parent li
          $(this).parent('li').css('background', 'linear-gradient(to right, #b71540, #e55039)');
        }
      });
///////////////////////////////////////////
script.
  
  function cropImgFunc(event) {
   let result = document.querySelector('#inputImg'),
        imgPreview = document.querySelector('#preImg');
  if (event.target.files.length) {
    // start file reader
    const reader = new FileReader();
    reader.onload = function(event) {
     if(event.target.result){
      // create new image
      let img = document.createElement('img');
      img.id = 'image';
      img.src = event.target.result;
      img.width = 244;
      img.height = 370;
      // clean result before
      result.innerHTML = '';
      // append new image
            result.appendChild(img);
      // init cropper
      cropper = new Cropper(img, {
       viewMode: 1,
       dragMode: 'move',
       aspectRatio: 1,
       autoCropArea: 0.68,
       minContainerWidth: 544,
       minContainerHeight: 370,
       center: false,
       zoomOnWheel: false,
       zoomOnTouch: false,
       cropBoxMovable: false,
       cropBoxResizable: false,
       guides: false,
       ready: function(event) {
        this.cropper = cropper;
       },
       crop: function(event) {
         let imgSrc = this.cropper.getCroppedCanvas({
         width: 170,
         height: 170// input value
        }).toDataURL("image/png");
              imgPreview.src = imgSrc;
       }
      });
      
     }
    };
    reader.readAsDataURL(event.target.files[0]);
   }
  }







///////////////////////////////////////////
    async function removeAddress() {
      const addressIdElement = document.getElementById("addressInput");
      const userId = document.getElementById("userInput").value;
      const addressId = addressIdElement.getAttribute('value');
      console.log(`user is ${userId}`);

      try {
        const response = await fetch(`/user/address/${addressId}/remove`, {
          method: "DELETE",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ address: addressId, user: userId }),
        });

        const data = await response.json();

        if (data.success) {
          window.location.href = "/user/profile";
        }
      } catch (error) {
        console.error("Error:", error);
        // Handle errors as needed
      }
    }

