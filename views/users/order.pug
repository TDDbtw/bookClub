include ../partials/navbar
title Order Detail
style.
  body {
    font-family: 'Roboto', sans-serif;
    margin: 0;
    padding: 0;
    background-color: #081c15;
    color: #fff;
  }
  .container {
    margin: 20px auto;
    background: linear-gradient(to right, #081c15, #0f332a, #122e25);
    border-radius: 8px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    padding: 20px;
    padding-bottom: 3rem;
  }
  .header {
    text-align: left;
    border-bottom: 1px solid #eee;
    margin-bottom: 20px;
    padding-bottom: 20px;
  }
  h1, h2 {
    color: #cac5c5;
    margin: 0;
  }
  .date {
    color: #cac5c5;
    margin-top: 10px;
  }
  .info-section {
    padding: 20px;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    border: 1px solid #eee;
    margin-bottom: 20px;
  }
  .info-section h2 {
    color: #cac5c5;
    margin-top: 0;
    margin-bottom: 3px;
  }
  table {
    width: 100%;
    border-collapse: collapse;
  }
  th, td {
    padding: 12px 8px;
    text-align: left;
    border-bottom: 1px solid #eee;
  }
  .total-price {
    text-align: right;
  }
  .status {
    padding: 5px 10px;
    border-radius: 3px;
  }
  .status.pending {
    color: #d9534f;
  }
  .status.processing {
    color: #f0ad4e;
  }
  .status.shipped {
    color: #4caf50;
  }
  .status.delivered {
    color: #2e7d32;
  }
  .status.cancelled {
    color: #ffffff;
  }
  .cancelled{
    color:red; 
    }
  .action-button {
    margin-top: 10px;
  }
  .action-button button {
    background-color: #d9534f;
    color: #fff;
    border: none;
    padding: 8px 16px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.3s ease;
  }
  .action-button button:hover {
    background-color: #c9302c;
  }
  .action-button.return button {
    background-color: #f0ad4e;
  }
  .action-button.return button:hover {
    background-color: #ec971f;
  }

link(rel="stylesheet", href="../../stylesheet/user/navbar.css")

body
  .container
    .header
      h1 Order Detail
      p Details for Order ID: #{order._id}
      .date
        p#createdDate(data-orderdate=order.created_at) Order placed on #{createdDate}
    .row
      .col-4
        .info-section
          h2 Customer
          p= order.user.name
          p= order.user.email
      .col-4
        .info-section
          h2 Order Info
          p Pay method: #{order.payment_method}
          p Status:
            if allCancelled ==true
              span.status.text-warning cancelled all items
            else if  allReturned
              span.status.pending  All item return requested
            else if order.status === 'pending'
              span.status.pending Order Placed
            else if order.status === 'processing'
              span.status.processing Order Processing
            else if order.status === 'shipped'
              span.status.shipped Order Shipped
            else if order.status === 'delivered' && order.returnRequest.status==null
              span.status.delivered Order Delivered
            else if order.status === 'cancelled'
              span.status.cancelled Order Cancelled
            else if order.returnRequest.status!=null 
              span.status.text-warning Order return requested
          if order.returnRequest.status==null
            p#deliveryDate(data-date=order.deliveryDate)
            small Expected delivery on #{deliveryDate}
          .action-button
            if order.status !== 'cancelled' && order.status !== 'delivered' && order.returnRequest.status==null && !allCancelled
              button(onclick=`handleCancelOrder( ${order._id} )`) Cancel Order
          .action-button.return
            if order.status === 'delivered' && order.returnRequest.status==null && !allReturned
              button(onclick=`handleReturnOrder(${order._id})`) Return Order
      .col-4
        .info-section
          h2 Delivery Info
          p Shipping:
            - var address = order.user.billing_address
            p Address: #{address.address}, City: #{address.city}, State: #{address.state}, Zip Code: #{address.zip_code}, Country: #{address.country}
    .info-section
      h2 Product Info
      table
        thead
          tr
            th Product
            th Unit Price
            th Quantity
            th Total
            th Actions
        tbody
          each product, index in order.items
            - const hasPendingRequest =product.request.type!=null  
            tr
              td #{product.name}
              td #{product.price}
              td #{product.quantity}
              td $#{(product.quantity * product.price).toFixed(2)}
              td
                if order.status=="cancelled"
                  span.status.cancelled Order Cancelled
                else if order.returnRequest.status!=null
                  span.status.return  order returned 
                else if order.returnRequest.status=='pending'
                  span.status.returned order return requested
                else
                  if !hasPendingRequest
                    if order.status!='delivered' 
                      .action-button
                        button(onclick=`handleCancelProduct('${order._id}', '${product.productId}')`) Cancel
                    else if order.status=='delivered' 
                      .action-button.return
                        button(onclick=`handleReturnProduct('${order._id}', '${product.productId}')`) Return
                  else
                    if product.request.type=='cancel'
                      span.status.cancelled Cancelled
                    else if product.request.type=='return'
                      if product.request.status=='pending'
                        span requested return
                      if product.request.status=='accepted'
                        span return accepted


      .total-price
        p Subtotal: $#{order.totalAmount}

script(src="../../script/user/userOrderUpdate.js") 
