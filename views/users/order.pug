include ../partials/navbar

title Order Detail

style.
    body {
        font-family: 'Inter', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #081c15;
        color: #e0e0e0;
    }
    .container {
        max-width: 1200px;
        margin: 40px auto;
        background: #1b4332;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        padding: 40px;
    }
    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        padding-bottom: 20px;
        border-bottom: 1px solid #2d6a4f;
    }
    h1, h2 {
        color: #d8f3dc;
        margin: 0;
    }
    .order-id {
        font-size: 0.9rem;
        color: #95d5b2;
    }
    .info-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 20px;
        margin-bottom: 40px;
    }
    .info-section {
        background-color: #2d6a4f;
        border-radius: 8px;
        padding: 20px;
    }
    .info-section h2 {
        font-size: 1.2rem;
        margin-bottom: 15px;
        color: #d8f3dc;
    }
    .status-badge {
        display: inline-block;
        padding: 6px 12px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.8rem;
        text-transform: uppercase;
    }
    .status-pending { background-color: #ffd166; color: #081c15; }
    .status-processing { background-color: #118ab2; color: #d8f3dc; }
    .status-shipped { background-color: #06d6a0; color: #081c15; }
    .status-delivered { background-color: #52b788; color: #081c15; }
    .status-cancelled { background-color: #cb1515; color: #d8f3dc; }
    table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0 10px;
    }
    th, td {
        padding: 15px;
        text-align: left;
        background-color: #2d6a4f;
    }
    th {
        background-color: #40916c;
        font-weight: 600;
    }
    tr:first-child th:first-child { border-top-left-radius: 8px; }
    tr:first-child th:last-child { border-top-right-radius: 8px; }
    tr:last-child td:first-child { border-bottom-left-radius: 8px; }
    tr:last-child td:last-child { border-bottom-right-radius: 8px; }
    .action-button {
        margin-top: 10px;
    }
    .btn {
        padding: 8px 16px;
        border-radius: 6px;
        font-weight: 500;
        text-transform: uppercase;
        font-size: 0.8rem;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    .btn-cancel { background-color: #ef476f; color: #d8f3dc; border: none; }
    .btn-cancel:hover { background-color: #d64161; }
    .btn-return { background-color: #ffd166; color: #081c15; border: none; }
    .btn-return:hover { background-color: #ffc233; }
    .btn-invoice { background-color: #118ab2; color: #d8f3dc; border: none; }
    .btn-invoice:hover { background-color: #0e7a9d; }
    .total-price {
        text-align: right;
        font-size: 1.2rem;
        font-weight: 600;
        margin-top: 20px;
        color: #d8f3dc;
    }
link(rel="stylesheet", href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap")
link(rel="stylesheet", href="../../stylesheet/user/navbar.css")
script(src='../../script/confirmationModal.js' defer)
script(src='../../script/toast.js' defer)

body
  .container
    .header
      div
        h1 Order Detail
        p.order-id Order ID: #{order._id}
      .date
        p#createdDate(data-orderdate=order.created_at) Placed on #{createdDate}
    
    .info-grid
      .info-section
        h2 Customer
        p= order.user.name
        p= order.user.email
      
      .info-section
        h2 Order Info
        p Pay method: #{order.payment_method}
        p Status: 
          if allCancelled
            span.status-badge.status-cancelled Cancelled
          else if allReturned
            span.status-badge.status-pending Return Requested
          else if order.status === 'pending'
            span.status-badge.status-pending Pending
          else if order.status === 'processing'
            span.status-badge.status-processing Processing
          else if order.status === 'shipped'
            span.status-badge.status-shipped Shipped
          else if order.status === 'delivered' && !order.returnRequest.status
            span.status-badge.status-delivered Delivered
          else if order.status === 'cancelled'
            span.status-badge.status-cancelled Cancelled
          else if order.returnRequest.status
            span.status-badge.status-pending Return Requested
        
        if order.returnRequest.status == null
          p#deliveryDate(data-date=order.deliveryDate)
            small Expected delivery on #{deliveryDate}
      
      .info-section
        h2 Delivery Info
        - var address = order.user.billing_address
        p #{address.address}
        p #{address.city}, #{address.state} #{address.zip_code}
        p #{address.country}
    
    .info-section
      h2 Product Info
      table
        thead
          tr
            th Product
            th Unit Price
            th Quantity
            th Total
            th Actions
        tbody
          each product, index in order.items
            - const hasPendingRequest = product.request.type != null
            tr
              td #{product.name}
              td $#{product.price.toFixed(2)}
              td #{product.quantity}
              td $#{(product.quantity * product.price).toFixed(2)}
              td
                if order.status == "cancelled"
                  span.status-badge.status-cancelled Cancelled
                else if order.returnRequest.status
                  span.status-badge.status-pending Returned
                else if !hasPendingRequest
                  if order.status != 'delivered'
                    button.btn.btn-cancel(onclick=`handleCancelProduct('${order._id}', '${product.productId}')`) Cancel
                  else
                    button.btn.btn-return(onclick=`handleReturnProduct('${order._id}', '${product.productId}')`) Return
                else
                  if product.request.type == 'cancel'
                    span.status-badge.status-cancelled Cancelled
                  else if product.request.type == 'return'
                    if product.request.status == 'pending'
                      span.status-badge.status-pending Return Requested
                    if product.request.status == 'accepted'
                      span.status-badge.status-delivered Return Accepted

    .total-price
      p Subtotal: $#{order.totalAmount.toFixed(2)}
    
    .action-button
      if order.status !== 'cancelled' && order.status !== 'delivered' && order.returnRequest.status == null && !allCancelled
        button.btn.btn-cancel(onclick=`handleCancelOrder(${order._id})`) Cancel Order
      if order.status === 'delivered' && order.returnRequest.status == null && !allReturned
        button.btn.btn-return(onclick=`handleReturnOrder(${order._id})`) Return Order
      if order.status === 'delivered' && order.returnRequest.status == null && !allReturned
        button.btn.btn-invoice(onclick=`handleInvoice(${order._id})`) Generate Invoice

script(src="../../script/user/userOrderUpdate.js")
