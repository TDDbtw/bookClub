include ../../partials/navbar
block rest
  link(rel="stylesheet", href="../../stylesheet/user/signUpForm.css")
  .mainC.d-flex
    .imgDiv
      img(src="/imgs/pic.png", alt="", srcset="")
    .signup-form-container.text-white
      h2.signUp-Head Forgot Password
        style.
          .signUpForm label{
            margin-top:12%;
          }

      form.signUpForm#otpForm.px-5()
        label(for="email") E-mail *
        input#email.form-input(type="email", name="email", oninput='validateEmail()', placeholder="Enter Your Registered E-mail..", required)
        span#emailError
        span.text-danger.ms-3#errorMessage
        a.text-decoration-none#resend.ms-3.btn-warning(style="display:none") Resend OTP
        button#loginButton(onclick="verifyEmail()") Continue
      p OR
      a.signUp-text.text-white.text-decoration-none(href="/auth/login")
          | Want to go back to login ?
      a.signUp-text.text-white.text-decoration-none 
          | Forgot Password ?
  script(src="../../script/validation.js")
  script(src="../../script/user/resetOtp.js")

  //- script.
    function verifyEmail() {
      event.preventDefault(); // Prevent the default behavior

      const email = document.getElementById('email').value; 
      const url = '/auth/password/email';
      const data = {
        email: email
      };

      fetch(url, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json', // Specify the content type if sending JSON data
          // Add any other headers if required
        },
        body: JSON.stringify(data) // Convert data to JSON format if needed
      })
        .then(response => response.json())
        .then(data => {
          if(data.error){
          console.log('Success:', data);
          emailinput.style.border = "2px solid red"
          document.getElementById('errorMessage').textContent = data.error
        }
        else{
        function genOtp(){
                  document.getElementById('resend').style.display = "none";
             Swal.fire({
                title: 'Enter OTP',
                text:"An otp as been sent to your email",
                input: 'text',
                inputAttributes: {
                    autocapitalize: 'off'
                },
                showCancelButton: true,
                background: "linear-gradient(to right, #081c15, #0d291f, #16372a)",
                //- color: "#cac5c5",
                cancelButtonText: 'Cancel',
                html: "I will close in <b></b> seconds.",
                timer: 20000,
                //- timerProgressBar: true,
                confirmButtonText: 'Verify',
                didOpen: () => {
                  //- Swal.showLoading();
                  const timer = Swal.getPopup().querySelector("b");
                  timerInterval = setInterval(() => {
                    timer.textContent =Math.trunc( `${Swal.getTimerLeft()/1000}`
                  )}, 1000);
                  
                },
                willClose: () => {
                  clearInterval(timerInterval);
                  document.getElementById('resend').style.display = "block";

                }
    
              }).then((result) => {
                /* Read more about handling dismissals below */
                if (result.dismiss === Swal.DismissReason.timer) {
                  document.getElementById('errorMessage').textContent = "OTP expired"
                  document.getElementById('resend').style.display = "block";
                  document.getElementById('resend').addEventListener("click", function() {
                    genOtp();
                  });

                }
                
                //- preConfirm: (otp) => {
                //-     // You can add your client-side verification logic here
                //-     // For example, alert the entered OTP
                //-     Swal.fire(`Entered OTP: ${otp}`);
                //- }
            });
        }
       genOtp()
        }
        })
        .catch(error => {
          console.error('Error:', error);
        });
    }
